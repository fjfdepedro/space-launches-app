import { ApolloClient, InMemoryCache, gql } from '@apollo/client';
import type { Metadata } from 'next'
import type { Launch } from '../types';
import './globals.css'


export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
}

export default function Home({ launches }: { launches: Launch[] }) {
  console.log('launches', launches);
  return (
    <div>
      <h1>
        SpaceX Launches
      </h1>
      <div>
        {launches.map(launch => {
          return (
            <a key={launch.id} href={launch.links.video_link}>
              <h3>{ launch.mission_name }</h3>
              <p><strong>Launch Date:</strong> { new Date(launch.launch_date_local).toLocaleDateString("en-US") }</p>
            </a>
          );
        })}
      </div>
    </div>

  )
}

export async function getStaticProps() {
  const client = new ApolloClient({
    uri: 'https://spacex-production.up.railway.app/',
    cache: new InMemoryCache()
  });

  const { data } = await client.query({
    query: gql`
      query GetLaunches {
        launchesPast(limit: 10) {
          id
          mission_name
          launch_date_local
          launch_site {
            site_name_long
          }
          links {
            article_link
            video_link
            mission_patch
          }
          rocket {
            rocket_name
          }
        }
      }
    `
  });

  return {
    props: {
      launches: data.launchesPast
    }
  }
}
